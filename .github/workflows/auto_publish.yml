name: auto_publish

on:
  push:
    paths:
      - sdk/bg/__init__.py

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"

      - name: Get current and previous version
        id: versions
        run: |
          FILE=sdk/bg/__init__.py
          CURRENT_VERSION=$(grep -oP "(?<=__version__ = ')[^']+" $FILE)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV

          git fetch --tags

          # Get the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$LATEST_TAG" ]; then
            echo "No previous version found."
            echo "previous_version=0.0.0" >> $GITHUB_ENV
          else
            PREVIOUS_VERSION=${LATEST_TAG#v}
            echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_ENV
          fi

      - name: Compare versions and create release if changed
        if: env.current_version != env.previous_version
        run: |
          echo "Current version: ${{ env.current_version }}"
          echo "Previous version: ${{ env.previous_version }}"

          TAG_NAME="v${{ env.current_version }}"
          RELEASE_NAME="Release ${{ env.current_version }}"

          git tag $TAG_NAME
          git push origin $TAG_NAME
          
          gh release create $TAG_NAME --title "$RELEASE_NAME" --notes "Version ${{ env.current_version }} released."
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_PUBLISH_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install and configure Poetry
        run: |
          pip install build --user

      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      - name: Pypi Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}